{
  "elapsed_ms": 23, 
  "file_info_response": [
    {
      "file_info": {
        "gob_info": {
          "repo": "chromium/chromium/src", 
          "commit": "8d737563f986f1ece3016211a26aae2c323ae73d", 
          "path": "net/http/http_network_transaction.h"
        }, 
        "name": "src/net/http/http_network_transaction.h", 
        "language": "c++", 
        "changelist_num": "8d737563f986f1ece3016211a26aae2c323ae73d", 
        "package_name": "chromium", 
        "lines": "430", 
        "content": {
          "text": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#ifndef NET_HTTP_HTTP_NETWORK_TRANSACTION_H_\n#define NET_HTTP_HTTP_NETWORK_TRANSACTION_H_\n\n#include <stdint.h>\n\n#include <memory>\n#include <string>\n\n#include \"base/gtest_prod_util.h\"\n#include \"base/macros.h\"\n#include \"base/memory/ref_counted.h\"\n#include \"base/time/time.h\"\n#include \"crypto/ec_private_key.h\"\n#include \"net/base/net_error_details.h\"\n#include \"net/base/net_export.h\"\n#include \"net/base/network_throttle_manager.h\"\n#include \"net/base/request_priority.h\"\n#include \"net/http/http_auth.h\"\n#include \"net/http/http_request_headers.h\"\n#include \"net/http/http_response_info.h\"\n#include \"net/http/http_stream_factory.h\"\n#include \"net/http/http_transaction.h\"\n#include \"net/log/net_log_with_source.h\"\n#include \"net/proxy_resolution/proxy_service.h\"\n#include \"net/socket/connection_attempts.h\"\n#include \"net/ssl/channel_id_service.h\"\n#include \"net/ssl/ssl_config_service.h\"\n#include \"net/websockets/websocket_handshake_stream_base.h\"\n\nnamespace crypto {\nclass ECPrivateKey;\n}\n\nnamespace net {\n\nclass BidirectionalStreamImpl;\nclass HttpAuthController;\nclass HttpNetworkSession;\nclass HttpStream;\nclass HttpStreamRequest;\nclass IOBuffer;\nclass ProxyInfo;\nclass SSLPrivateKey;\nstruct HttpRequestInfo;\n\nclass NET_EXPORT_PRIVATE HttpNetworkTransaction\n    : public HttpTransaction,\n      public HttpStreamRequest::Delegate,\n      public NetworkThrottleManager::ThrottleDelegate {\n public:\n  HttpNetworkTransaction(RequestPriority priority,\n                         HttpNetworkSession* session);\n\n  ~HttpNetworkTransaction() override;\n\n  // HttpTransaction methods:\n  int Start(const HttpRequestInfo* request_info,\n            const CompletionCallback& callback,\n            const NetLogWithSource& net_log) override;\n  int RestartIgnoringLastError(const CompletionCallback& callback) override;\n  int RestartWithCertificate(scoped_refptr<X509Certificate> client_cert,\n                             scoped_refptr<SSLPrivateKey> client_private_key,\n                             const CompletionCallback& callback) override;\n  int RestartWithAuth(const AuthCredentials& credentials,\n                      const CompletionCallback& callback) override;\n  bool IsReadyToRestartForAuth() override;\n\n  int Read(IOBuffer* buf,\n           int buf_len,\n           const CompletionCallback& callback) override;\n  void StopCaching() override;\n  bool GetFullRequestHeaders(HttpRequestHeaders* headers) const override;\n  int64_t GetTotalReceivedBytes() const override;\n  int64_t GetTotalSentBytes() const override;\n  void DoneReading() override;\n  const HttpResponseInfo* GetResponseInfo() const override;\n  LoadState GetLoadState() const override;\n  void SetQuicServerInfo(QuicServerInfo* quic_server_info) override;\n  bool GetLoadTimingInfo(LoadTimingInfo* load_timing_info) const override;\n  bool GetRemoteEndpoint(IPEndPoint* endpoint) const override;\n  void PopulateNetErrorDetails(NetErrorDetails* details) const override;\n  void SetPriority(RequestPriority priority) override;\n  void SetWebSocketHandshakeStreamCreateHelper(\n      WebSocketHandshakeStreamBase::CreateHelper* create_helper) override;\n  void SetBeforeNetworkStartCallback(\n      const BeforeNetworkStartCallback& callback) override;\n  void SetBeforeHeadersSentCallback(\n      const BeforeHeadersSentCallback& callback) override;\n  void SetRequestHeadersCallback(RequestHeadersCallback callback) override;\n  void SetResponseHeadersCallback(ResponseHeadersCallback callback) override;\n\n  int ResumeNetworkStart() override;\n\n  // HttpStreamRequest::Delegate methods:\n  void OnStreamReady(const SSLConfig& used_ssl_config,\n                     const ProxyInfo& used_proxy_info,\n                     std::unique_ptr<HttpStream> stream) override;\n  void OnBidirectionalStreamImplReady(\n      const SSLConfig& used_ssl_config,\n      const ProxyInfo& used_proxy_info,\n      std::unique_ptr<BidirectionalStreamImpl> stream) override;\n  void OnWebSocketHandshakeStreamReady(\n      const SSLConfig& used_ssl_config,\n      const ProxyInfo& used_proxy_info,\n      std::unique_ptr<WebSocketHandshakeStreamBase> stream) override;\n  void OnStreamFailed(int status,\n                      const NetErrorDetails& net_error_details,\n                      const SSLConfig& used_ssl_config) override;\n  void OnCertificateError(int status,\n                          const SSLConfig& used_ssl_config,\n                          const SSLInfo& ssl_info) override;\n  void OnNeedsProxyAuth(const HttpResponseInfo& response_info,\n                        const SSLConfig& used_ssl_config,\n                        const ProxyInfo& used_proxy_info,\n                        HttpAuthController* auth_controller) override;\n  void OnNeedsClientAuth(const SSLConfig& used_ssl_config,\n                         SSLCertRequestInfo* cert_info) override;\n  void OnHttpsProxyTunnelResponse(const HttpResponseInfo& response_info,\n                                  const SSLConfig& used_ssl_config,\n                                  const ProxyInfo& used_proxy_info,\n                                  std::unique_ptr<HttpStream> stream) override;\n\n  void OnQuicBroken() override;\n  void GetConnectionAttempts(ConnectionAttempts* out) const override;\n\n  // NetworkThrottleManager::Delegate methods:\n  void OnThrottleUnblocked(NetworkThrottleManager::Throttle* throttle) override;\n\n private:\n  FRIEND_TEST_ALL_PREFIXES(HttpNetworkTransactionTest, ResetStateForRestart);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest, WindowUpdateReceived);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest, WindowUpdateSent);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest, WindowUpdateOverflow);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest, FlowControlStallResume);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest,\n                           FlowControlStallResumeAfterSettings);\n  FRIEND_TEST_ALL_PREFIXES(SpdyNetworkTransactionTest,\n                           FlowControlNegativeSendWindowSize);\n\n  enum State {\n    STATE_THROTTLE,\n    STATE_THROTTLE_COMPLETE,\n    STATE_NOTIFY_BEFORE_CREATE_STREAM,\n    STATE_CREATE_STREAM,\n    STATE_CREATE_STREAM_COMPLETE,\n    STATE_INIT_STREAM,\n    STATE_INIT_STREAM_COMPLETE,\n    STATE_GENERATE_PROXY_AUTH_TOKEN,\n    STATE_GENERATE_PROXY_AUTH_TOKEN_COMPLETE,\n    STATE_GENERATE_SERVER_AUTH_TOKEN,\n    STATE_GENERATE_SERVER_AUTH_TOKEN_COMPLETE,\n    STATE_GET_PROVIDED_TOKEN_BINDING_KEY,\n    STATE_GET_PROVIDED_TOKEN_BINDING_KEY_COMPLETE,\n    STATE_GET_REFERRED_TOKEN_BINDING_KEY,\n    STATE_GET_REFERRED_TOKEN_BINDING_KEY_COMPLETE,\n    STATE_INIT_REQUEST_BODY,\n    STATE_INIT_REQUEST_BODY_COMPLETE,\n    STATE_BUILD_REQUEST,\n    STATE_BUILD_REQUEST_COMPLETE,\n    STATE_SEND_REQUEST,\n    STATE_SEND_REQUEST_COMPLETE,\n    STATE_READ_HEADERS,\n    STATE_READ_HEADERS_COMPLETE,\n    STATE_READ_BODY,\n    STATE_READ_BODY_COMPLETE,\n    STATE_DRAIN_BODY_FOR_AUTH_RESTART,\n    STATE_DRAIN_BODY_FOR_AUTH_RESTART_COMPLETE,\n    STATE_NONE\n  };\n\n  bool IsSecureRequest() const;\n  bool IsTokenBindingEnabled() const;\n  void RecordTokenBindingSupport() const;\n\n  // Returns true if the request is using an HTTP(S) proxy without being\n  // tunneled via the CONNECT method.\n  bool UsingHttpProxyWithoutTunnel() const;\n\n  void DoCallback(int result);\n  void OnIOComplete(int result);\n\n  // Runs the state transition loop.\n  int DoLoop(int result);\n\n  // Each of these methods corresponds to a State value.  Those with an input\n  // argument receive the result from the previous state.  If a method returns\n  // ERR_IO_PENDING, then the result from OnIOComplete will be passed to the\n  // next state method as the result arg.\n  int DoThrottle();\n  int DoThrottleComplete();\n  int DoNotifyBeforeCreateStream();\n  int DoCreateStream();\n  int DoCreateStreamComplete(int result);\n  int DoInitStream();\n  int DoInitStreamComplete(int result);\n  int DoGenerateProxyAuthToken();\n  int DoGenerateProxyAuthTokenComplete(int result);\n  int DoGenerateServerAuthToken();\n  int DoGenerateServerAuthTokenComplete(int result);\n  int DoGetProvidedTokenBindingKey();\n  int DoGetProvidedTokenBindingKeyComplete(int result);\n  int DoGetReferredTokenBindingKey();\n  int DoGetReferredTokenBindingKeyComplete(int result);\n  int DoInitRequestBody();\n  int DoInitRequestBodyComplete(int result);\n  int DoBuildRequest();\n  int DoBuildRequestComplete(int result);\n  int DoSendRequest();\n  int DoSendRequestComplete(int result);\n  int DoReadHeaders();\n  int DoReadHeadersComplete(int result);\n  int DoReadBody();\n  int DoReadBodyComplete(int result);\n  int DoDrainBodyForAuthRestart();\n  int DoDrainBodyForAuthRestartComplete(int result);\n\n  int BuildRequestHeaders(bool using_http_proxy_without_tunnel);\n  int BuildTokenBindingHeader(std::string* out);\n\n  // Writes a log message to help debugging in the field when we block a proxy\n  // response to a CONNECT request.\n  void LogBlockedTunnelResponse(int response_code) const;\n\n  // Called to handle a client certificate request.\n  int HandleCertificateRequest(int error);\n\n  // Called wherever ERR_HTTP_1_1_REQUIRED or\n  // ERR_PROXY_HTTP_1_1_REQUIRED has to be handled.\n  int HandleHttp11Required(int error);\n\n  // Called to possibly handle a client authentication error.\n  void HandleClientAuthError(int error);\n\n  // Called to possibly recover from an SSL handshake error.  Sets next_state_\n  // and returns OK if recovering from the error.  Otherwise, the same error\n  // code is returned.\n  int HandleSSLHandshakeError(int error);\n\n  // Called to possibly recover from the given error.  Sets next_state_ and\n  // returns OK if recovering from the error.  Otherwise, the same error code\n  // is returned.\n  int HandleIOError(int error);\n\n  // Gets the response headers from the HttpStream.\n  HttpResponseHeaders* GetResponseHeaders() const;\n\n  // Called when the socket is unexpectedly closed.  Returns true if the request\n  // should be resent in case of a socket reuse/close race.\n  bool ShouldResendRequest() const;\n\n  // Returns true if there have already been |kMaxRetryAttempts| retries for\n  // HTTP2 or QUIC network errors, and no further retries should be attempted.\n  bool HasExceededMaxRetries() const;\n\n  // Resets the connection and the request headers for resend.  Called when\n  // ShouldResendRequest() is true.\n  void ResetConnectionAndRequestForResend();\n\n  // Sets up the state machine to restart the transaction with auth.\n  void PrepareForAuthRestart(HttpAuth::Target target);\n\n  // Called when we don't need to drain the response body or have drained it.\n  // Resets |connection_| unless |keep_alive| is true, then calls\n  // ResetStateForRestart.  Sets |next_state_| appropriately.\n  void DidDrainBodyForAuthRestart(bool keep_alive);\n\n  // Resets the members of the transaction so it can be restarted.\n  void ResetStateForRestart();\n\n  // Resets the members of the transaction, except |stream_|, which needs\n  // to be maintained for multi-round auth.\n  void ResetStateForAuthRestart();\n\n  // Caches network error details from the stream if available\n  // and resets the stream.\n  void CacheNetErrorDetailsAndResetStream();\n\n  // Returns true if we should try to add a Proxy-Authorization header\n  bool ShouldApplyProxyAuth() const;\n\n  // Returns true if we should try to add an Authorization header.\n  bool ShouldApplyServerAuth() const;\n\n  // Handles HTTP status code 401 or 407.\n  // HandleAuthChallenge() returns a network error code, or OK on success.\n  // May update |pending_auth_target_| or |response_.auth_challenge|.\n  int HandleAuthChallenge();\n\n  // Returns true if we have auth credentials for the given target.\n  bool HaveAuth(HttpAuth::Target target) const;\n\n  // Get the {scheme, host, path, port} for the authentication target\n  GURL AuthURL(HttpAuth::Target target) const;\n\n  // Returns true if this transaction is for a WebSocket handshake\n  bool ForWebSocketHandshake() const;\n\n  void SetStream(HttpStream* stream);\n\n  void CopyConnectionAttemptsFromStreamRequest();\n\n  // Returns true if response \"Content-Encoding\" headers respect\n  // \"Accept-Encoding\".\n  bool ContentEncodingsValid() const;\n\n  scoped_refptr<HttpAuthController>\n      auth_controllers_[HttpAuth::AUTH_NUM_TARGETS];\n\n  // Whether this transaction is waiting for proxy auth, server auth, or is\n  // not waiting for any auth at all. |pending_auth_target_| is read and\n  // cleared by RestartWithAuth().\n  HttpAuth::Target pending_auth_target_;\n\n  CompletionCallback io_callback_;\n  CompletionCallback callback_;\n\n  HttpNetworkSession* session_;\n\n  NetLogWithSource net_log_;\n\n  // Reset to null at the start of the Read state machine.\n  const HttpRequestInfo* request_;\n\n  // The requested URL.\n  GURL url_;\n  RequestPriority priority_;\n  HttpResponseInfo response_;\n\n  // |proxy_info_| is the ProxyInfo used by the HttpStreamRequest.\n  ProxyInfo proxy_info_;\n\n  std::unique_ptr<HttpStreamRequest> stream_request_;\n  std::unique_ptr<HttpStream> stream_;\n\n  // True if we've validated the headers that the stream parser has returned.\n  bool headers_valid_;\n\n  // True if we can send the request over early data.\n  bool can_send_early_data_;\n\n  SSLConfig server_ssl_config_;\n  SSLConfig proxy_ssl_config_;\n\n  // Keys to use for signing message in Token Binding header.\n  std::unique_ptr<crypto::ECPrivateKey> provided_token_binding_key_;\n  std::unique_ptr<crypto::ECPrivateKey> referred_token_binding_key_;\n  // Object to manage lookup of |provided_token_binding_key_| and\n  // |referred_token_binding_key_|.\n  ChannelIDService::Request token_binding_request_;\n\n  HttpRequestHeaders request_headers_;\n\n  // The size in bytes of the buffer we use to drain the response body that\n  // we want to throw away.  The response body is typically a small error\n  // page just a few hundred bytes long.\n  static const int kDrainBodyBufferSize = 1024;\n\n  // User buffer and length passed to the Read method.\n  scoped_refptr<IOBuffer> read_buf_;\n  int read_buf_len_;\n\n  // Total number of bytes received on all destroyed HttpStreams for this\n  // transaction.\n  int64_t total_received_bytes_;\n\n  // Total number of bytes sent on all destroyed HttpStreams for this\n  // transaction.\n  int64_t total_sent_bytes_;\n\n  // When the transaction started / finished sending the request, including\n  // the body, if present.\n  base::TimeTicks send_start_time_;\n  base::TimeTicks send_end_time_;\n\n  // The next state in the state machine.\n  State next_state_;\n\n  // True when the tunnel is in the process of being established - we can't\n  // read from the socket until the tunnel is done.\n  bool establishing_tunnel_;\n\n  // Enable pooling to a SpdySession with matching IP and certificate\n  // even if the SpdySessionKey is different.\n  bool enable_ip_based_pooling_;\n\n  // Enable using alternative services for the request.\n  bool enable_alternative_services_;\n\n  // When a request is retried because of errors with the alternative service,\n  // this will store the alternative service used.\n  AlternativeService retried_alternative_service_;\n\n  // The helper object to use to create WebSocketHandshakeStreamBase\n  // objects. Only relevant when establishing a WebSocket connection.\n  WebSocketHandshakeStreamBase::CreateHelper*\n      websocket_handshake_stream_base_create_helper_;\n\n  BeforeNetworkStartCallback before_network_start_callback_;\n  BeforeHeadersSentCallback before_headers_sent_callback_;\n  RequestHeadersCallback request_headers_callback_;\n  ResponseHeadersCallback response_headers_callback_;\n\n  ConnectionAttempts connection_attempts_;\n  IPEndPoint remote_endpoint_;\n  // Network error details for this transaction.\n  NetErrorDetails net_error_details_;\n\n  // Communicate lifetime of transaction to the throttler, and\n  // throttled state to the transaction.\n  std::unique_ptr<NetworkThrottleManager::Throttle> throttle_;\n\n  // Number of retries made for network errors like ERR_SPDY_PING_FAILED,\n  // ERR_SPDY_SERVER_REFUSED_STREAM, ERR_QUIC_HANDSHAKE_FAILED and\n  // ERR_QUIC_PROTOCOL_ERROR. Currently we stop after 3 tries\n  // (including the initial request) and fail the request.\n  // This count excludes retries on reused sockets since a well\n  // behaved server may time those out and thus the number\n  // of times we can retry a request on reused sockets is limited.\n  size_t retry_attempts_;\n\n  DISALLOW_COPY_AND_ASSIGN(HttpNetworkTransaction);\n};\n\n}  // namespace net\n\n#endif  // NET_HTTP_HTTP_NETWORK_TRANSACTION_H_\n"
        }, 
        "generated": false, 
        "mime_type": "text/plain", 
        "size": "16472", 
        "type": 1, 
        "md5": "175cbd16a1702d561c463ddcee6b00dd", 
        "codeblock": [
          {
            "type": 40, 
            "name": "NET_HTTP_HTTP_NETWORK_TRANSACTION_H_", 
            "text_range": {
              "start_line": 6, 
              "end_line": 7, 
              "start_column": 1, 
              "end_column": 1
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "HttpNetworkTransaction", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "HttpNetworkTransaction", 
                    "signature": "(RequestPriority priority, HttpNetworkSession* session)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 55, 
                      "end_line": 56, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "~HttpNetworkTransaction", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 58, 
                      "end_line": 58, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "Start", 
                    "signature": "(const HttpRequestInfo* request_info, const CompletionCallback& callback, const NetLogWithSource& net_log)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 61, 
                      "end_line": 63, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "RestartIgnoringLastError", 
                    "signature": "(const CompletionCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 64, 
                      "end_line": 64, 
                      "start_column": 3, 
                      "end_column": 77
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "RestartWithCertificate", 
                    "signature": "(scoped_refptr<X509Certificate> client_cert, scoped_refptr<SSLPrivateKey> client_private_key, const CompletionCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 65, 
                      "end_line": 67, 
                      "start_column": 3, 
                      "end_column": 75
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "RestartWithAuth", 
                    "signature": "(const AuthCredentials& credentials, const CompletionCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 68, 
                      "end_line": 69, 
                      "start_column": 3, 
                      "end_column": 68
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "IsReadyToRestartForAuth", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 70, 
                      "end_line": 70, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "Read", 
                    "signature": "(IOBuffer* buf, int buf_len, const CompletionCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 72, 
                      "end_line": 74, 
                      "start_column": 3, 
                      "end_column": 57
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "StopCaching", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 75, 
                      "end_line": 75, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetFullRequestHeaders", 
                    "signature": "(HttpRequestHeaders* headers)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 76, 
                      "end_line": 76, 
                      "start_column": 3, 
                      "end_column": 74
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetTotalReceivedBytes", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 77, 
                      "end_line": 77, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetTotalSentBytes", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 78, 
                      "end_line": 78, 
                      "start_column": 3, 
                      "end_column": 46
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "DoneReading", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 79, 
                      "end_line": 79, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetResponseInfo", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 80, 
                      "end_line": 80, 
                      "start_column": 3, 
                      "end_column": 60
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetLoadState", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 81, 
                      "end_line": 81, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetQuicServerInfo", 
                    "signature": "(QuicServerInfo* quic_server_info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 82, 
                      "end_line": 82, 
                      "start_column": 3, 
                      "end_column": 69
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetLoadTimingInfo", 
                    "signature": "(LoadTimingInfo* load_timing_info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 83, 
                      "end_line": 83, 
                      "start_column": 3, 
                      "end_column": 75
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetRemoteEndpoint", 
                    "signature": "(IPEndPoint* endpoint)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 84, 
                      "end_line": 84, 
                      "start_column": 3, 
                      "end_column": 63
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "PopulateNetErrorDetails", 
                    "signature": "(NetErrorDetails* details)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 85, 
                      "end_line": 85, 
                      "start_column": 3, 
                      "end_column": 73
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetPriority", 
                    "signature": "(RequestPriority priority)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 86, 
                      "end_line": 86, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetWebSocketHandshakeStreamCreateHelper", 
                    "signature": "(WebSocketHandshakeStreamBase::CreateHelper* create_helper)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 87, 
                      "end_line": 88, 
                      "start_column": 3, 
                      "end_column": 75
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetBeforeNetworkStartCallback", 
                    "signature": "(const BeforeNetworkStartCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 89, 
                      "end_line": 90, 
                      "start_column": 3, 
                      "end_column": 60
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetBeforeHeadersSentCallback", 
                    "signature": "(const BeforeHeadersSentCallback& callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 91, 
                      "end_line": 92, 
                      "start_column": 3, 
                      "end_column": 59
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetRequestHeadersCallback", 
                    "signature": "(RequestHeadersCallback callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 93, 
                      "end_line": 93, 
                      "start_column": 3, 
                      "end_column": 76
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetResponseHeadersCallback", 
                    "signature": "(ResponseHeadersCallback callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 94, 
                      "end_line": 94, 
                      "start_column": 3, 
                      "end_column": 78
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "ResumeNetworkStart", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 96, 
                      "end_line": 96, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnStreamReady", 
                    "signature": "(const SSLConfig& used_ssl_config, const ProxyInfo& used_proxy_info, std::unique_ptr<HttpStream> stream)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 99, 
                      "end_line": 101, 
                      "start_column": 3, 
                      "end_column": 67
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnBidirectionalStreamImplReady", 
                    "signature": "(const SSLConfig& used_ssl_config, const ProxyInfo& used_proxy_info, std::unique_ptr<BidirectionalStreamImpl> stream)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 102, 
                      "end_line": 105, 
                      "start_column": 3, 
                      "end_column": 65
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnWebSocketHandshakeStreamReady", 
                    "signature": "(const SSLConfig& used_ssl_config, const ProxyInfo& used_proxy_info, std::unique_ptr<WebSocketHandshakeStreamBase> stream)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 106, 
                      "end_line": 109, 
                      "start_column": 3, 
                      "end_column": 70
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnStreamFailed", 
                    "signature": "(int status, const NetErrorDetails& net_error_details, const SSLConfig& used_ssl_config)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 110, 
                      "end_line": 112, 
                      "start_column": 3, 
                      "end_column": 66
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnCertificateError", 
                    "signature": "(int status, const SSLConfig& used_ssl_config, const SSLInfo& ssl_info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 113, 
                      "end_line": 115, 
                      "start_column": 3, 
                      "end_column": 61
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnNeedsProxyAuth", 
                    "signature": "(const HttpResponseInfo& response_info, const SSLConfig& used_ssl_config, const ProxyInfo& used_proxy_info, HttpAuthController* auth_controller)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 116, 
                      "end_line": 119, 
                      "start_column": 3, 
                      "end_column": 71
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnNeedsClientAuth", 
                    "signature": "(const SSLConfig& used_ssl_config, SSLCertRequestInfo* cert_info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 120, 
                      "end_line": 121, 
                      "start_column": 3, 
                      "end_column": 66
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnHttpsProxyTunnelResponse", 
                    "signature": "(const HttpResponseInfo& response_info, const SSLConfig& used_ssl_config, const ProxyInfo& used_proxy_info, std::unique_ptr<HttpStream> stream)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 122, 
                      "end_line": 125, 
                      "start_column": 3, 
                      "end_column": 80
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnQuicBroken", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 127, 
                      "end_line": 127, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "GetConnectionAttempts", 
                    "signature": "(ConnectionAttempts* out)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 128, 
                      "end_line": 128, 
                      "start_column": 3, 
                      "end_column": 70
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "OnThrottleUnblocked", 
                    "signature": "(NetworkThrottleManager::Throttle* throttle)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 131, 
                      "end_line": 131, 
                      "start_column": 3, 
                      "end_column": 81
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "State", 
                    "signature": "", 
                    "child": [
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_THROTTLE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 145, 
                          "end_line": 145, 
                          "start_column": 5, 
                          "end_column": 19
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_THROTTLE_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 146, 
                          "end_line": 146, 
                          "start_column": 5, 
                          "end_column": 28
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_NOTIFY_BEFORE_CREATE_STREAM", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 147, 
                          "end_line": 147, 
                          "start_column": 5, 
                          "end_column": 38
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_CREATE_STREAM", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 148, 
                          "end_line": 148, 
                          "start_column": 5, 
                          "end_column": 24
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_CREATE_STREAM_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 149, 
                          "end_line": 149, 
                          "start_column": 5, 
                          "end_column": 33
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_INIT_STREAM", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 150, 
                          "end_line": 150, 
                          "start_column": 5, 
                          "end_column": 22
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_INIT_STREAM_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 151, 
                          "end_line": 151, 
                          "start_column": 5, 
                          "end_column": 31
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GENERATE_PROXY_AUTH_TOKEN", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 152, 
                          "end_line": 152, 
                          "start_column": 5, 
                          "end_column": 36
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GENERATE_PROXY_AUTH_TOKEN_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 153, 
                          "end_line": 153, 
                          "start_column": 5, 
                          "end_column": 45
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GENERATE_SERVER_AUTH_TOKEN", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 154, 
                          "end_line": 154, 
                          "start_column": 5, 
                          "end_column": 37
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GENERATE_SERVER_AUTH_TOKEN_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 155, 
                          "end_line": 155, 
                          "start_column": 5, 
                          "end_column": 46
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GET_PROVIDED_TOKEN_BINDING_KEY", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 156, 
                          "end_line": 156, 
                          "start_column": 5, 
                          "end_column": 41
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GET_PROVIDED_TOKEN_BINDING_KEY_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 157, 
                          "end_line": 157, 
                          "start_column": 5, 
                          "end_column": 50
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GET_REFERRED_TOKEN_BINDING_KEY", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 158, 
                          "end_line": 158, 
                          "start_column": 5, 
                          "end_column": 41
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_GET_REFERRED_TOKEN_BINDING_KEY_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 159, 
                          "end_line": 159, 
                          "start_column": 5, 
                          "end_column": 50
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_INIT_REQUEST_BODY", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 160, 
                          "end_line": 160, 
                          "start_column": 5, 
                          "end_column": 28
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_INIT_REQUEST_BODY_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 161, 
                          "end_line": 161, 
                          "start_column": 5, 
                          "end_column": 37
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_BUILD_REQUEST", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 162, 
                          "end_line": 162, 
                          "start_column": 5, 
                          "end_column": 24
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_BUILD_REQUEST_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 163, 
                          "end_line": 163, 
                          "start_column": 5, 
                          "end_column": 33
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_SEND_REQUEST", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 164, 
                          "end_line": 164, 
                          "start_column": 5, 
                          "end_column": 23
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_SEND_REQUEST_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 165, 
                          "end_line": 165, 
                          "start_column": 5, 
                          "end_column": 32
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_READ_HEADERS", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 166, 
                          "end_line": 166, 
                          "start_column": 5, 
                          "end_column": 23
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_READ_HEADERS_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 167, 
                          "end_line": 167, 
                          "start_column": 5, 
                          "end_column": 32
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_READ_BODY", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 168, 
                          "end_line": 168, 
                          "start_column": 5, 
                          "end_column": 20
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_READ_BODY_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 169, 
                          "end_line": 169, 
                          "start_column": 5, 
                          "end_column": 29
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_DRAIN_BODY_FOR_AUTH_RESTART", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 170, 
                          "end_line": 170, 
                          "start_column": 5, 
                          "end_column": 38
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_DRAIN_BODY_FOR_AUTH_RESTART_COMPLETE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 171, 
                          "end_line": 171, 
                          "start_column": 5, 
                          "end_column": 47
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "STATE_NONE", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 172, 
                          "end_line": 172, 
                          "start_column": 5, 
                          "end_column": 15
                        }
                      }
                    ], 
                    "name_prefix": "", 
                    "type": 4, 
                    "text_range": {
                      "start_line": 144, 
                      "end_line": 173, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "IsSecureRequest", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 175, 
                      "end_line": 175, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "IsTokenBindingEnabled", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 176, 
                      "end_line": 176, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "RecordTokenBindingSupport", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 177, 
                      "end_line": 177, 
                      "start_column": 3, 
                      "end_column": 42
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "UsingHttpProxyWithoutTunnel", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 181, 
                      "end_line": 181, 
                      "start_column": 3, 
                      "end_column": 44
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoCallback", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 183, 
                      "end_line": 183, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "OnIOComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 184, 
                      "end_line": 184, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoLoop", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 187, 
                      "end_line": 187, 
                      "start_column": 3, 
                      "end_column": 26
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoThrottle", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 193, 
                      "end_line": 193, 
                      "start_column": 3, 
                      "end_column": 20
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoThrottleComplete", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 194, 
                      "end_line": 194, 
                      "start_column": 3, 
                      "end_column": 28
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoNotifyBeforeCreateStream", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 195, 
                      "end_line": 195, 
                      "start_column": 3, 
                      "end_column": 36
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoCreateStream", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 196, 
                      "end_line": 196, 
                      "start_column": 3, 
                      "end_column": 24
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoCreateStreamComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 197, 
                      "end_line": 197, 
                      "start_column": 3, 
                      "end_column": 42
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoInitStream", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 198, 
                      "end_line": 198, 
                      "start_column": 3, 
                      "end_column": 22
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoInitStreamComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 199, 
                      "end_line": 199, 
                      "start_column": 3, 
                      "end_column": 40
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGenerateProxyAuthToken", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 200, 
                      "end_line": 200, 
                      "start_column": 3, 
                      "end_column": 34
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGenerateProxyAuthTokenComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 201, 
                      "end_line": 201, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGenerateServerAuthToken", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 202, 
                      "end_line": 202, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGenerateServerAuthTokenComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 203, 
                      "end_line": 203, 
                      "start_column": 3, 
                      "end_column": 53
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGetProvidedTokenBindingKey", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 204, 
                      "end_line": 204, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGetProvidedTokenBindingKeyComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 205, 
                      "end_line": 205, 
                      "start_column": 3, 
                      "end_column": 56
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGetReferredTokenBindingKey", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 206, 
                      "end_line": 206, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoGetReferredTokenBindingKeyComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 207, 
                      "end_line": 207, 
                      "start_column": 3, 
                      "end_column": 56
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoInitRequestBody", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 208, 
                      "end_line": 208, 
                      "start_column": 3, 
                      "end_column": 27
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoInitRequestBodyComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 209, 
                      "end_line": 209, 
                      "start_column": 3, 
                      "end_column": 45
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoBuildRequest", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 210, 
                      "end_line": 210, 
                      "start_column": 3, 
                      "end_column": 24
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoBuildRequestComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 211, 
                      "end_line": 211, 
                      "start_column": 3, 
                      "end_column": 42
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoSendRequest", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 212, 
                      "end_line": 212, 
                      "start_column": 3, 
                      "end_column": 23
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoSendRequestComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 213, 
                      "end_line": 213, 
                      "start_column": 3, 
                      "end_column": 41
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoReadHeaders", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 214, 
                      "end_line": 214, 
                      "start_column": 3, 
                      "end_column": 23
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoReadHeadersComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 215, 
                      "end_line": 215, 
                      "start_column": 3, 
                      "end_column": 41
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoReadBody", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 216, 
                      "end_line": 216, 
                      "start_column": 3, 
                      "end_column": 20
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoReadBodyComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 217, 
                      "end_line": 217, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoDrainBodyForAuthRestart", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 218, 
                      "end_line": 218, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoDrainBodyForAuthRestartComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 219, 
                      "end_line": 219, 
                      "start_column": 3, 
                      "end_column": 53
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "BuildRequestHeaders", 
                    "signature": "(bool using_http_proxy_without_tunnel)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 221, 
                      "end_line": 221, 
                      "start_column": 3, 
                      "end_column": 65
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "BuildTokenBindingHeader", 
                    "signature": "(std::string* out)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 222, 
                      "end_line": 222, 
                      "start_column": 3, 
                      "end_column": 49
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "LogBlockedTunnelResponse", 
                    "signature": "(int response_code)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 226, 
                      "end_line": 226, 
                      "start_column": 3, 
                      "end_column": 58
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleCertificateRequest", 
                    "signature": "(int error)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 229, 
                      "end_line": 229, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleHttp11Required", 
                    "signature": "(int error)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 233, 
                      "end_line": 233, 
                      "start_column": 3, 
                      "end_column": 39
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleClientAuthError", 
                    "signature": "(int error)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 236, 
                      "end_line": 236, 
                      "start_column": 3, 
                      "end_column": 41
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleSSLHandshakeError", 
                    "signature": "(int error)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 241, 
                      "end_line": 241, 
                      "start_column": 3, 
                      "end_column": 42
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleIOError", 
                    "signature": "(int error)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 246, 
                      "end_line": 246, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetResponseHeaders", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 249, 
                      "end_line": 249, 
                      "start_column": 3, 
                      "end_column": 51
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ShouldResendRequest", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 253, 
                      "end_line": 253, 
                      "start_column": 3, 
                      "end_column": 36
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HasExceededMaxRetries", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 257, 
                      "end_line": 257, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ResetConnectionAndRequestForResend", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 261, 
                      "end_line": 261, 
                      "start_column": 3, 
                      "end_column": 45
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "PrepareForAuthRestart", 
                    "signature": "(HttpAuth::Target target)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 264, 
                      "end_line": 264, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DidDrainBodyForAuthRestart", 
                    "signature": "(bool keep_alive)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 269, 
                      "end_line": 269, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ResetStateForRestart", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 272, 
                      "end_line": 272, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ResetStateForAuthRestart", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 276, 
                      "end_line": 276, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "CacheNetErrorDetailsAndResetStream", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 280, 
                      "end_line": 280, 
                      "start_column": 3, 
                      "end_column": 45
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ShouldApplyProxyAuth", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 283, 
                      "end_line": 283, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ShouldApplyServerAuth", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 286, 
                      "end_line": 286, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HandleAuthChallenge", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 291, 
                      "end_line": 291, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "HaveAuth", 
                    "signature": "(HttpAuth::Target target)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 294, 
                      "end_line": 294, 
                      "start_column": 3, 
                      "end_column": 48
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "AuthURL", 
                    "signature": "(HttpAuth::Target target)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 297, 
                      "end_line": 297, 
                      "start_column": 3, 
                      "end_column": 47
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ForWebSocketHandshake", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 300, 
                      "end_line": 300, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SetStream", 
                    "signature": "(HttpStream* stream)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 302, 
                      "end_line": 302, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "CopyConnectionAttemptsFromStreamRequest", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 304, 
                      "end_line": 304, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ContentEncodingsValid", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 308, 
                      "end_line": 308, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "auth_controllers_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 310, 
                      "end_line": 311, 
                      "start_column": 3, 
                      "end_column": 53
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "pending_auth_target_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 316, 
                      "end_line": 316, 
                      "start_column": 3, 
                      "end_column": 41
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "io_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 318, 
                      "end_line": 318, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 319, 
                      "end_line": 319, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "session_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 321, 
                      "end_line": 321, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "net_log_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 323, 
                      "end_line": 323, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 326, 
                      "end_line": 326, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "url_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 329, 
                      "end_line": 329, 
                      "start_column": 3, 
                      "end_column": 13
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "priority_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 330, 
                      "end_line": 330, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "response_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 331, 
                      "end_line": 331, 
                      "start_column": 3, 
                      "end_column": 30
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "proxy_info_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 334, 
                      "end_line": 334, 
                      "start_column": 3, 
                      "end_column": 25
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "stream_request_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 336, 
                      "end_line": 336, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "stream_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 337, 
                      "end_line": 337, 
                      "start_column": 3, 
                      "end_column": 39
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "headers_valid_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 340, 
                      "end_line": 340, 
                      "start_column": 3, 
                      "end_column": 23
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "can_send_early_data_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 343, 
                      "end_line": 343, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "server_ssl_config_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 345, 
                      "end_line": 345, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "proxy_ssl_config_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 346, 
                      "end_line": 346, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "provided_token_binding_key_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 349, 
                      "end_line": 349, 
                      "start_column": 3, 
                      "end_column": 69
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "referred_token_binding_key_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 350, 
                      "end_line": 350, 
                      "start_column": 3, 
                      "end_column": 69
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "token_binding_request_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 353, 
                      "end_line": 353, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_headers_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 355, 
                      "end_line": 355, 
                      "start_column": 3, 
                      "end_column": 39
                    }
                  }, 
                  {
                    "modifiers": {
                      "static": true, 
                      "private": true
                    }, 
                    "name": "kDrainBodyBufferSize", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 360, 
                      "end_line": 360, 
                      "start_column": 3, 
                      "end_column": 48
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "read_buf_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 363, 
                      "end_line": 363, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "read_buf_len_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 364, 
                      "end_line": 364, 
                      "start_column": 3, 
                      "end_column": 21
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "total_received_bytes_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 368, 
                      "end_line": 368, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "total_sent_bytes_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 372, 
                      "end_line": 372, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "send_start_time_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 376, 
                      "end_line": 376, 
                      "start_column": 3, 
                      "end_column": 36
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "send_end_time_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 377, 
                      "end_line": 377, 
                      "start_column": 3, 
                      "end_column": 34
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "next_state_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 380, 
                      "end_line": 380, 
                      "start_column": 3, 
                      "end_column": 21
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "establishing_tunnel_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 384, 
                      "end_line": 384, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "enable_ip_based_pooling_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 388, 
                      "end_line": 388, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "enable_alternative_services_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 391, 
                      "end_line": 391, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "retried_alternative_service_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 395, 
                      "end_line": 395, 
                      "start_column": 3, 
                      "end_column": 51
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "websocket_handshake_stream_base_create_helper_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 399, 
                      "end_line": 400, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "before_network_start_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 402, 
                      "end_line": 402, 
                      "start_column": 3, 
                      "end_column": 61
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "before_headers_sent_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 403, 
                      "end_line": 403, 
                      "start_column": 3, 
                      "end_column": 59
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_headers_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 404, 
                      "end_line": 404, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "response_headers_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 405, 
                      "end_line": 405, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "connection_attempts_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 407, 
                      "end_line": 407, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "remote_endpoint_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 408, 
                      "end_line": 408, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "net_error_details_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 410, 
                      "end_line": 410, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "throttle_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 414, 
                      "end_line": 414, 
                      "start_column": 3, 
                      "end_column": 63
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "retry_attempts_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 423, 
                      "end_line": 423, 
                      "start_column": 3, 
                      "end_column": 26
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 1, 
                "text_range": {
                  "start_line": 50, 
                  "end_line": 426, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "net", 
            "text_range": {
              "start_line": 38, 
              "end_line": 428, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }
        ]
      }, 
      "return_code": 1
    }
  ]
}