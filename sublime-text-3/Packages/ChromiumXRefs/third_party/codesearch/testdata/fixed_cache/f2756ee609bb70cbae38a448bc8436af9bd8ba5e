{
  "elapsed_ms": 85, 
  "file_info_response": [
    {
      "file_info": {
        "gob_info": {
          "repo": "chromium/chromium/src", 
          "commit": "43b9a96089772adef7f6fc7dc118a291520864d4", 
          "path": "net/url_request/url_request_http_job.h"
        }, 
        "name": "src/net/url_request/url_request_http_job.h", 
        "language": "c++", 
        "changelist_num": "43b9a96089772adef7f6fc7dc118a291520864d4", 
        "package_name": "chromium", 
        "lines": "270", 
        "content": {
          "text": "// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#ifndef NET_URL_REQUEST_URL_REQUEST_HTTP_JOB_H_\n#define NET_URL_REQUEST_URL_REQUEST_HTTP_JOB_H_\n\n#include <stddef.h>\n#include <stdint.h>\n\n#include <memory>\n#include <string>\n\n#include \"base/compiler_specific.h\"\n#include \"base/macros.h\"\n#include \"base/memory/weak_ptr.h\"\n#include \"base/time/time.h\"\n#include \"net/base/auth.h\"\n#include \"net/base/completion_callback.h\"\n#include \"net/base/net_error_details.h\"\n#include \"net/base/net_export.h\"\n#include \"net/cookies/cookie_store.h\"\n#include \"net/http/http_request_info.h\"\n#include \"net/net_features.h\"\n#include \"net/socket/connection_attempts.h\"\n#include \"net/url_request/url_request_job.h\"\n#include \"net/url_request/url_request_throttler_entry_interface.h\"\n\nnamespace net {\n\nclass HttpRequestHeaders;\nclass HttpResponseHeaders;\nclass HttpResponseInfo;\nclass HttpTransaction;\nclass HttpUserAgentSettings;\nclass ProxyInfo;\nclass SSLPrivateKey;\nclass UploadDataStream;\n\n// A URLRequestJob subclass that is built on top of HttpTransaction. It\n// provides an implementation for both HTTP and HTTPS.\nclass NET_EXPORT_PRIVATE URLRequestHttpJob : public URLRequestJob {\n public:\n  static URLRequestJob* Factory(URLRequest* request,\n                                NetworkDelegate* network_delegate,\n                                const std::string& scheme);\n\n  void SetRequestHeadersCallback(RequestHeadersCallback callback) override;\n  void SetResponseHeadersCallback(ResponseHeadersCallback callback) override;\n\n protected:\n  URLRequestHttpJob(URLRequest* request,\n                    NetworkDelegate* network_delegate,\n                    const HttpUserAgentSettings* http_user_agent_settings);\n\n  ~URLRequestHttpJob() override;\n\n  // Overridden from URLRequestJob:\n  void SetPriority(RequestPriority priority) override;\n  void Start() override;\n  void Kill() override;\n  void GetConnectionAttempts(ConnectionAttempts* out) const override;\n  std::unique_ptr<SourceStream> SetUpSourceStream() override;\n\n  RequestPriority priority() const {\n    return priority_;\n  }\n\n private:\n  enum CompletionCause {\n    ABORTED,\n    FINISHED\n  };\n\n  typedef base::RefCountedData<bool> SharedBoolean;\n\n  // Shadows URLRequestJob's version of this method so we can grab cookies.\n  void NotifyHeadersComplete();\n\n  void DestroyTransaction();\n\n  void AddExtraHeaders();\n  void AddCookieHeaderAndStart();\n  void SaveCookiesAndNotifyHeadersComplete(int result);\n\n  // Processes the Strict-Transport-Security header, if one exists.\n  void ProcessStrictTransportSecurityHeader();\n\n  // Processes the Public-Key-Pins header, if one exists.\n  void ProcessPublicKeyPinsHeader();\n\n  // Processes the Expect-CT header, if one exists. This header\n  // indicates that the server wants the user agent to send a report\n  // when a connection violates the Expect CT policy.\n  void ProcessExpectCTHeader();\n\n#if BUILDFLAG(ENABLE_REPORTING)\n  // Processes the Report-To header, if one exists. This header configures where\n  // the Reporting API (in //net/reporting) will send reports for the origin.\n  void ProcessReportToHeader();\n\n  // Processes the NEL header, if one exists. This header configures whether\n  // network errors will be reported to a specified group of endpoints using the\n  // Reporting API.\n  void ProcessNetworkErrorLoggingHeader();\n#endif  // BUILDFLAG(ENABLE_REPORTING)\n\n  // |result| should be OK, or the request is canceled.\n  void OnHeadersReceivedCallback(int result);\n  void OnStartCompleted(int result);\n  void OnReadCompleted(int result);\n  void NotifyBeforeStartTransactionCallback(int result);\n  void NotifyBeforeSendHeadersCallback(const ProxyInfo& proxy_info,\n                                       HttpRequestHeaders* request_headers);\n\n  void RestartTransactionWithAuth(const AuthCredentials& credentials);\n\n  // Overridden from URLRequestJob:\n  void SetUpload(UploadDataStream* upload) override;\n  void SetExtraRequestHeaders(const HttpRequestHeaders& headers) override;\n  LoadState GetLoadState() const override;\n  bool GetMimeType(std::string* mime_type) const override;\n  bool GetCharset(std::string* charset) override;\n  void GetResponseInfo(HttpResponseInfo* info) override;\n  void GetLoadTimingInfo(LoadTimingInfo* load_timing_info) const override;\n  bool GetRemoteEndpoint(IPEndPoint* endpoint) const override;\n  int GetResponseCode() const override;\n  void PopulateNetErrorDetails(NetErrorDetails* details) const override;\n  bool CopyFragmentOnRedirect(const GURL& location) const override;\n  bool IsSafeRedirect(const GURL& location) override;\n  bool NeedsAuth() override;\n  void GetAuthChallengeInfo(scoped_refptr<AuthChallengeInfo>*) override;\n  void SetAuth(const AuthCredentials& credentials) override;\n  void CancelAuth() override;\n  void ContinueWithCertificate(\n      scoped_refptr<X509Certificate> client_cert,\n      scoped_refptr<SSLPrivateKey> client_private_key) override;\n  void ContinueDespiteLastError() override;\n  int ReadRawData(IOBuffer* buf, int buf_size) override;\n  void StopCaching() override;\n  bool GetFullRequestHeaders(HttpRequestHeaders* headers) const override;\n  int64_t GetTotalReceivedBytes() const override;\n  int64_t GetTotalSentBytes() const override;\n  void DoneReading() override;\n  void DoneReadingRedirectResponse() override;\n\n  HostPortPair GetSocketAddress() const override;\n  void NotifyURLRequestDestroyed() override;\n\n  void RecordTimer();\n  void ResetTimer();\n\n  void UpdatePacketReadTimes() override;\n\n  // Starts the transaction if extensions using the webrequest API do not\n  // object.\n  void StartTransaction();\n  // If |result| is OK, calls StartTransactionInternal. Otherwise notifies\n  // cancellation.\n  void MaybeStartTransactionInternal(int result);\n  void StartTransactionInternal();\n\n  void RecordPerfHistograms(CompletionCause reason);\n  void DoneWithRequest(CompletionCause reason);\n\n  // Callback functions for Cookie Monster\n  void SetCookieHeaderAndStart(const CookieList& cookie_list);\n\n  // Some servers send the body compressed, but specify the content length as\n  // the uncompressed size. If this is the case, we return true in order\n  // to request to work around this non-adherence to the HTTP standard.\n  // |rv| is the standard return value of a read function indicating the number\n  // of bytes read or, if negative, an error code.\n  bool ShouldFixMismatchedContentLength(int rv) const;\n\n  // Returns the effective response headers, considering that they may be\n  // overridden by |override_response_headers_|.\n  HttpResponseHeaders* GetResponseHeaders() const;\n\n  RequestPriority priority_;\n\n  HttpRequestInfo request_info_;\n  const HttpResponseInfo* response_info_;\n\n  // Auth states for proxy and origin server.\n  AuthState proxy_auth_state_;\n  AuthState server_auth_state_;\n  AuthCredentials auth_credentials_;\n\n  bool read_in_progress_;\n\n  std::unique_ptr<HttpTransaction> transaction_;\n\n  // This is used to supervise traffic and enforce exponential\n  // back-off. May be NULL.\n  scoped_refptr<URLRequestThrottlerEntryInterface> throttling_entry_;\n\n  // For recording of stats, we need to remember if this is cached content.\n  bool is_cached_content_;\n\n  base::Time request_creation_time_;\n\n  // Data used for statistics gathering. This data is only used for histograms\n  // and is not required. It is only gathered if packet_timing_enabled_ == true.\n  //\n  // TODO(jar): improve the quality of the gathered info by gathering most times\n  // at a lower point in the network stack, assuring we have actual packet\n  // boundaries, rather than approximations. Also note that input byte count\n  // as gathered here is post-SSL, and post-cache-fetch, and does not reflect\n  // true packet arrival times in such cases.\n\n  // Enable recording of packet arrival times for histogramming.\n  bool packet_timing_enabled_;\n  bool done_;  // True when we are done doing work.\n\n  // The number of bytes that have been accounted for in packets (where some of\n  // those packets may possibly have had their time of arrival recorded).\n  int64_t bytes_observed_in_packets_;\n\n  // The request time may not be available when we are being destroyed, so we\n  // snapshot it early on.\n  base::Time request_time_snapshot_;\n\n  // Since we don't save all packet times in packet_times_, we save the\n  // last time for use in histograms.\n  base::Time final_packet_time_;\n\n  // The start time for the job, ignoring re-starts.\n  base::TimeTicks start_time_;\n\n  // When the transaction finished reading the request headers.\n  base::TimeTicks receive_headers_end_;\n\n  // We allow the network delegate to modify a copy of the response headers.\n  // This prevents modifications of headers that are shared with the underlying\n  // layers of the network stack.\n  scoped_refptr<HttpResponseHeaders> override_response_headers_;\n\n  // The network delegate can mark a URL as safe for redirection.\n  // The reference fragment of the original URL is not appended to the redirect\n  // URL when the redirect URL is equal to |allowed_unsafe_redirect_url_|.\n  GURL allowed_unsafe_redirect_url_;\n\n  // Flag used to verify that |this| is not deleted while we are awaiting\n  // a callback from the NetworkDelegate. Used as a fail-fast mechanism.\n  // True if we are waiting a callback and\n  // NetworkDelegate::NotifyURLRequestDestroyed has not been called, yet,\n  // to inform the NetworkDelegate that it may not call back.\n  bool awaiting_callback_;\n\n  const HttpUserAgentSettings* http_user_agent_settings_;\n\n  // Keeps track of total received bytes over the network from transactions used\n  // by this job that have already been destroyed.\n  int64_t total_received_bytes_from_previous_transactions_;\n  // Keeps track of total sent bytes over the network from transactions used by\n  // this job that have already been destroyed.\n  int64_t total_sent_bytes_from_previous_transactions_;\n\n  RequestHeadersCallback request_headers_callback_;\n  ResponseHeadersCallback response_headers_callback_;\n\n  base::WeakPtrFactory<URLRequestHttpJob> weak_factory_;\n\n  DISALLOW_COPY_AND_ASSIGN(URLRequestHttpJob);\n};\n\n}  // namespace net\n\n#endif  // NET_URL_REQUEST_URL_REQUEST_HTTP_JOB_H_\n"
        }, 
        "generated": false, 
        "mime_type": "text/plain", 
        "size": "10230", 
        "type": 1, 
        "md5": "a6733dd9e92a0a9770ff10d168acce4a", 
        "codeblock": [
          {
            "type": 40, 
            "name": "NET_URL_REQUEST_URL_REQUEST_HTTP_JOB_H_", 
            "text_range": {
              "start_line": 6, 
              "end_line": 7, 
              "start_column": 1, 
              "end_column": 1
            }, 
            "signature": ""
          }, 
          {
            "child": [
              {
                "name": "URLRequestHttpJob", 
                "signature": "", 
                "child": [
                  {
                    "modifiers": {
                      "static": true, 
                      "public": true
                    }, 
                    "name": "Factory", 
                    "signature": "(URLRequest* request, NetworkDelegate* network_delegate, const std::string& scheme)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 44, 
                      "end_line": 46, 
                      "start_column": 3, 
                      "end_column": 60
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetRequestHeadersCallback", 
                    "signature": "(RequestHeadersCallback callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 48, 
                      "end_line": 48, 
                      "start_column": 3, 
                      "end_column": 76
                    }
                  }, 
                  {
                    "modifiers": {
                      "public": true
                    }, 
                    "name": "SetResponseHeadersCallback", 
                    "signature": "(ResponseHeadersCallback callback)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 49, 
                      "end_line": 49, 
                      "start_column": 3, 
                      "end_column": 78
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "URLRequestHttpJob", 
                    "signature": "(URLRequest* request, NetworkDelegate* network_delegate, const HttpUserAgentSettings* http_user_agent_settings)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 52, 
                      "end_line": 54, 
                      "start_column": 3, 
                      "end_column": 76
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "~URLRequestHttpJob", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 56, 
                      "end_line": 56, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "SetPriority", 
                    "signature": "(RequestPriority priority)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 59, 
                      "end_line": 59, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "Start", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 60, 
                      "end_line": 60, 
                      "start_column": 3, 
                      "end_column": 25
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "Kill", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 61, 
                      "end_line": 61, 
                      "start_column": 3, 
                      "end_column": 24
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "GetConnectionAttempts", 
                    "signature": "(ConnectionAttempts* out)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 62, 
                      "end_line": 62, 
                      "start_column": 3, 
                      "end_column": 70
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "SetUpSourceStream", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 63, 
                      "end_line": 63, 
                      "start_column": 3, 
                      "end_column": 62
                    }
                  }, 
                  {
                    "modifiers": {
                      "protected": true
                    }, 
                    "name": "priority", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 65, 
                      "end_line": 67, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "CompletionCause", 
                    "signature": "", 
                    "child": [
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "ABORTED", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 71, 
                          "end_line": 71, 
                          "start_column": 5, 
                          "end_column": 12
                        }
                      }, 
                      {
                        "modifiers": {
                          "private": true
                        }, 
                        "name": "FINISHED", 
                        "signature": "", 
                        "name_prefix": "", 
                        "type": 14, 
                        "text_range": {
                          "start_line": 72, 
                          "end_line": 72, 
                          "start_column": 5, 
                          "end_column": 13
                        }
                      }
                    ], 
                    "name_prefix": "", 
                    "type": 4, 
                    "text_range": {
                      "start_line": 70, 
                      "end_line": 73, 
                      "start_column": 3, 
                      "end_column": 4
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SharedBoolean", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 10, 
                    "text_range": {
                      "start_line": 75, 
                      "end_line": 75, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "NotifyHeadersComplete", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 78, 
                      "end_line": 78, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DestroyTransaction", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 80, 
                      "end_line": 80, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "AddExtraHeaders", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 82, 
                      "end_line": 82, 
                      "start_column": 3, 
                      "end_column": 26
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "AddCookieHeaderAndStart", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 83, 
                      "end_line": 83, 
                      "start_column": 3, 
                      "end_column": 34
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SaveCookiesAndNotifyHeadersComplete", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 84, 
                      "end_line": 84, 
                      "start_column": 3, 
                      "end_column": 56
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ProcessStrictTransportSecurityHeader", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 87, 
                      "end_line": 87, 
                      "start_column": 3, 
                      "end_column": 47
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ProcessPublicKeyPinsHeader", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 90, 
                      "end_line": 90, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ProcessExpectCTHeader", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 95, 
                      "end_line": 95, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ProcessReportToHeader", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 100, 
                      "end_line": 100, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ProcessNetworkErrorLoggingHeader", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 105, 
                      "end_line": 105, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "OnHeadersReceivedCallback", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 109, 
                      "end_line": 109, 
                      "start_column": 3, 
                      "end_column": 46
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "OnStartCompleted", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 110, 
                      "end_line": 110, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "OnReadCompleted", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 111, 
                      "end_line": 111, 
                      "start_column": 3, 
                      "end_column": 36
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "NotifyBeforeStartTransactionCallback", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 112, 
                      "end_line": 112, 
                      "start_column": 3, 
                      "end_column": 57
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "NotifyBeforeSendHeadersCallback", 
                    "signature": "(const ProxyInfo& proxy_info, HttpRequestHeaders* request_headers)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 113, 
                      "end_line": 114, 
                      "start_column": 3, 
                      "end_column": 77
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "RestartTransactionWithAuth", 
                    "signature": "(const AuthCredentials& credentials)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 116, 
                      "end_line": 116, 
                      "start_column": 3, 
                      "end_column": 71
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SetUpload", 
                    "signature": "(UploadDataStream* upload)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 119, 
                      "end_line": 119, 
                      "start_column": 3, 
                      "end_column": 53
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SetExtraRequestHeaders", 
                    "signature": "(const HttpRequestHeaders& headers)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 120, 
                      "end_line": 120, 
                      "start_column": 3, 
                      "end_column": 75
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetLoadState", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 121, 
                      "end_line": 121, 
                      "start_column": 3, 
                      "end_column": 43
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetMimeType", 
                    "signature": "(std::string* mime_type)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 122, 
                      "end_line": 122, 
                      "start_column": 3, 
                      "end_column": 59
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetCharset", 
                    "signature": "(std::string* charset)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 123, 
                      "end_line": 123, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetResponseInfo", 
                    "signature": "(HttpResponseInfo* info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 124, 
                      "end_line": 124, 
                      "start_column": 3, 
                      "end_column": 57
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetLoadTimingInfo", 
                    "signature": "(LoadTimingInfo* load_timing_info)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 125, 
                      "end_line": 125, 
                      "start_column": 3, 
                      "end_column": 75
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetRemoteEndpoint", 
                    "signature": "(IPEndPoint* endpoint)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 126, 
                      "end_line": 126, 
                      "start_column": 3, 
                      "end_column": 63
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetResponseCode", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 127, 
                      "end_line": 127, 
                      "start_column": 3, 
                      "end_column": 40
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "PopulateNetErrorDetails", 
                    "signature": "(NetErrorDetails* details)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 128, 
                      "end_line": 128, 
                      "start_column": 3, 
                      "end_column": 73
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "CopyFragmentOnRedirect", 
                    "signature": "(const GURL& location)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 129, 
                      "end_line": 129, 
                      "start_column": 3, 
                      "end_column": 68
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "IsSafeRedirect", 
                    "signature": "(const GURL& location)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 130, 
                      "end_line": 130, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "NeedsAuth", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 131, 
                      "end_line": 131, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetAuthChallengeInfo", 
                    "signature": "(scoped_refptr<AuthChallengeInfo>*)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 132, 
                      "end_line": 132, 
                      "start_column": 3, 
                      "end_column": 73
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SetAuth", 
                    "signature": "(const AuthCredentials& credentials)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 133, 
                      "end_line": 133, 
                      "start_column": 3, 
                      "end_column": 61
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "CancelAuth", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 134, 
                      "end_line": 134, 
                      "start_column": 3, 
                      "end_column": 30
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ContinueWithCertificate", 
                    "signature": "(scoped_refptr<X509Certificate> client_cert, scoped_refptr<SSLPrivateKey> client_private_key)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 135, 
                      "end_line": 137, 
                      "start_column": 3, 
                      "end_column": 65
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ContinueDespiteLastError", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 138, 
                      "end_line": 138, 
                      "start_column": 3, 
                      "end_column": 44
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ReadRawData", 
                    "signature": "(IOBuffer* buf, int buf_size)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 139, 
                      "end_line": 139, 
                      "start_column": 3, 
                      "end_column": 57
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "StopCaching", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 140, 
                      "end_line": 140, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetFullRequestHeaders", 
                    "signature": "(HttpRequestHeaders* headers)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 141, 
                      "end_line": 141, 
                      "start_column": 3, 
                      "end_column": 74
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetTotalReceivedBytes", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 142, 
                      "end_line": 142, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetTotalSentBytes", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 143, 
                      "end_line": 143, 
                      "start_column": 3, 
                      "end_column": 46
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoneReading", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 144, 
                      "end_line": 144, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoneReadingRedirectResponse", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 145, 
                      "end_line": 145, 
                      "start_column": 3, 
                      "end_column": 47
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetSocketAddress", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 147, 
                      "end_line": 147, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "NotifyURLRequestDestroyed", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 148, 
                      "end_line": 148, 
                      "start_column": 3, 
                      "end_column": 45
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "RecordTimer", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 150, 
                      "end_line": 150, 
                      "start_column": 3, 
                      "end_column": 22
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ResetTimer", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 151, 
                      "end_line": 151, 
                      "start_column": 3, 
                      "end_column": 21
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "UpdatePacketReadTimes", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 153, 
                      "end_line": 153, 
                      "start_column": 3, 
                      "end_column": 41
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "StartTransaction", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 157, 
                      "end_line": 157, 
                      "start_column": 3, 
                      "end_column": 27
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "MaybeStartTransactionInternal", 
                    "signature": "(int result)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 160, 
                      "end_line": 160, 
                      "start_column": 3, 
                      "end_column": 50
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "StartTransactionInternal", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 161, 
                      "end_line": 161, 
                      "start_column": 3, 
                      "end_column": 35
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "RecordPerfHistograms", 
                    "signature": "(CompletionCause reason)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 163, 
                      "end_line": 163, 
                      "start_column": 3, 
                      "end_column": 53
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "DoneWithRequest", 
                    "signature": "(CompletionCause reason)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 164, 
                      "end_line": 164, 
                      "start_column": 3, 
                      "end_column": 48
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "SetCookieHeaderAndStart", 
                    "signature": "(const CookieList& cookie_list)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 167, 
                      "end_line": 167, 
                      "start_column": 3, 
                      "end_column": 63
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "ShouldFixMismatchedContentLength", 
                    "signature": "(int rv)", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 174, 
                      "end_line": 174, 
                      "start_column": 3, 
                      "end_column": 55
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "GetResponseHeaders", 
                    "signature": "()", 
                    "name_prefix": "", 
                    "type": 8, 
                    "text_range": {
                      "start_line": 178, 
                      "end_line": 178, 
                      "start_column": 3, 
                      "end_column": 51
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "priority_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 180, 
                      "end_line": 180, 
                      "start_column": 3, 
                      "end_column": 29
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_info_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 182, 
                      "end_line": 182, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "response_info_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 183, 
                      "end_line": 183, 
                      "start_column": 3, 
                      "end_column": 42
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "proxy_auth_state_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 186, 
                      "end_line": 186, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "server_auth_state_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 187, 
                      "end_line": 187, 
                      "start_column": 3, 
                      "end_column": 32
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "auth_credentials_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 188, 
                      "end_line": 188, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "read_in_progress_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 190, 
                      "end_line": 190, 
                      "start_column": 3, 
                      "end_column": 26
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "transaction_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 192, 
                      "end_line": 192, 
                      "start_column": 3, 
                      "end_column": 49
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "throttling_entry_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 196, 
                      "end_line": 196, 
                      "start_column": 3, 
                      "end_column": 70
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "is_cached_content_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 199, 
                      "end_line": 199, 
                      "start_column": 3, 
                      "end_column": 27
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_creation_time_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 201, 
                      "end_line": 201, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "packet_timing_enabled_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 213, 
                      "end_line": 213, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "done_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 214, 
                      "end_line": 214, 
                      "start_column": 3, 
                      "end_column": 14
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "bytes_observed_in_packets_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 218, 
                      "end_line": 218, 
                      "start_column": 3, 
                      "end_column": 38
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_time_snapshot_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 222, 
                      "end_line": 222, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "final_packet_time_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 226, 
                      "end_line": 226, 
                      "start_column": 3, 
                      "end_column": 33
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "start_time_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 229, 
                      "end_line": 229, 
                      "start_column": 3, 
                      "end_column": 31
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "receive_headers_end_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 232, 
                      "end_line": 232, 
                      "start_column": 3, 
                      "end_column": 40
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "override_response_headers_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 237, 
                      "end_line": 237, 
                      "start_column": 3, 
                      "end_column": 65
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "allowed_unsafe_redirect_url_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 242, 
                      "end_line": 242, 
                      "start_column": 3, 
                      "end_column": 37
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "awaiting_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 249, 
                      "end_line": 249, 
                      "start_column": 3, 
                      "end_column": 27
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "http_user_agent_settings_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 251, 
                      "end_line": 251, 
                      "start_column": 3, 
                      "end_column": 58
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "total_received_bytes_from_previous_transactions_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 255, 
                      "end_line": 255, 
                      "start_column": 3, 
                      "end_column": 60
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "total_sent_bytes_from_previous_transactions_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 258, 
                      "end_line": 258, 
                      "start_column": 3, 
                      "end_column": 56
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "request_headers_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 260, 
                      "end_line": 260, 
                      "start_column": 3, 
                      "end_column": 52
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "response_headers_callback_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 261, 
                      "end_line": 261, 
                      "start_column": 3, 
                      "end_column": 54
                    }
                  }, 
                  {
                    "modifiers": {
                      "private": true
                    }, 
                    "name": "weak_factory_", 
                    "signature": "", 
                    "name_prefix": "", 
                    "type": 9, 
                    "text_range": {
                      "start_line": 263, 
                      "end_line": 263, 
                      "start_column": 3, 
                      "end_column": 57
                    }
                  }
                ], 
                "name_prefix": "", 
                "type": 1, 
                "text_range": {
                  "start_line": 42, 
                  "end_line": 266, 
                  "start_column": 1, 
                  "end_column": 2
                }
              }
            ], 
            "type": 11, 
            "name": "net", 
            "text_range": {
              "start_line": 29, 
              "end_line": 268, 
              "start_column": 1, 
              "end_column": 2
            }, 
            "signature": ""
          }
        ]
      }, 
      "return_code": 1
    }
  ]
}